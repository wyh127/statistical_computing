knitr::opts_chunk$set(echo = TRUE)
n <- 100
p <- 10
s <- 3
set.seed(0)
x <- matrix(rnorm(n*p), n, p)
b <- c(-0.7, 0.7, 1, rep(0, p-s))
y <- x %*% b + rt(n, df=2)
cor(x, y)
cor(x[, 1], y)
cor(x, y)
cor(x, y)
plot(qnorm)
plot(dnorm)
plot(seq(-3, 3, 0.01), dnorm)
range <- seq(-4, 4, 0.01)
plot(range, dnorm(range))
lines(range, dnorm(range))
plot(range, dnorm(range))
lines(range, dnorm(range))
plot(range, dnorm(range), type = "l")
lines(range, dt(range), col = "blue")
plot(range, dnorm(range), type = "l")
lines(range, dt(range, 3), col = "blue")
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.3, legend=c("standard norma", "t-distribution with df = 3"), col=c("black", "blue"))
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution with df = 3"), col=c("black", "blue"), lty=c(1, 1))
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution"), col=c("black", "blue"), lty=c(1, 1))
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution"), col=c("black", "blue"), lty=c(1, 1), cex = 0.8)
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution"), col=c("black", "blue"), pch=c(1, 1), cex = 0.8)
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution"), col=c("black", "blue"), pch=c(2, 2), cex = 0.8)
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution"), col=c("black", "blue"), pch=c(16, 16), cex = 0.8)
plot(range, dnorm(range), type = "l", ylab = "density")
lines(range, dt(range, 3), col = "blue")
legend(-4, 0.4, legend=c("standard normal", "t-distribution with df=3"), col=c("black", "blue"), pch=c(16, 16), cex = 0.8)
psi <- function(r, c = 1) {
return(ifelse(r^2 > c^2, 2*c*abs(r) - c^2, r^2))
}
huber.loss <- function(beta) {
resd <- x %*% beta - y
res <- sum(psi(resd))
return(res)
}
