knitr::opts_chunk$set(echo = TRUE)
gpa <- read.table("CH01PR19.txt", header = FALSE)
names(gpa) <- c("Y", "X")
reg <- lm(Y~X, data = gpa)
coe <- summary(reg)$coefficients
anova(reg)
| |Sum of Squares|df|MSS|F-Stat|P-value|
| ------------- |:-------------:| -----:| -----:| -----:| -----:|
|$SS_{Regression}$|3.588|1|3.5878|9.2402|0.002917|
|$SS_{Resigual}$|45.818|118|0.3883|||
|$SS_T$|49.406|119|0.4151|||
F_stat <- (coe[2, 1]/(coe[2, 2])) ^ 2
F_ref <- qf(0.99, 1, 118)
F_stat > F_ref
F-stat
F_stat
anova(reg)
R2 <- anova(reg)[1, 2] / (anova(reg)[1, 2] + anova(reg)[2, 2])
r <- sqrt(R2)
r
reg
3.588/49.406
sqrt(0.07262276)
plastic <- read.table("CH01PR22.txt")
names(plastic) <- c("Y", "X")
reg_1 <- lm(Y~X, data = plastic)
anova(reg_1)
coe_1 <- summary(reg_1)$coefficients
F_1 <- (coe_1[2, 1]/coe_1[2, 2])^2
P_1 <- 1-pf(F_1, 1, 14)
P_1 < 0.01
R2_1 <- anova(reg_1)[1, 2] / (anova(reg_1)[1, 2] + anova(reg_1)[2, 2])
r_1 <- sqrt(R2_1)
?rnorm
set.seed(1)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg_2 <- lm(Y~X)
reg_2
X_h <- data.frame(X = 10)
predict(reg_2, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)
sqrt(0.125)
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, x_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
b1 <- c()
CIs <- list()
for (i in 1:200) {
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
X
var(X)
sd(X)
X
for (i in 1:2000) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
summary(reg_2)
b1
mean(b1)
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
CIs
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
ggplot(plastic, aes(y = Y - predict(reg_1), x = X)) + geom_point() + ylim(c(-25, 25))
library(ggplot2)
ggplot(plastic, aes(y = Y - predict(reg_1), x = X)) + geom_point() + ylim(c(-25, 25))
head(iris)
Versicolor <- ifelse(iris$Species == 'versicolor', 1, 0)
Versicolor
table
table(Versicolor)
3^3
knitr::opts_chunk$set(echo = TRUE)
n <- 100
x1 <- runif(n, min = 0, max = 2)
x2 <- runif(n, min = 0, max = 2)
cnt <- 0
for (i in 1:n) {
if((x1+x2>2) && (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
area_hat <- cnt / n
area_hat
x1
for (i in 1:n) {
if((x1+x2>2) && (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
cnt
x2
x1+x2>2
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt += 1
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt <- cnt + 1
}
}
for (i in 1:n) {
if((x1[i]+x2[i]>2) & (x1[i]^2+x2[i]^2<4)) {
cnt <- cnt + 1
}
}
area_hat <- cnt / n
area_hat
pi
pi-2
n <- 100000
x1 <- runif(n, min = 0, max = 2)
x2 <- runif(n, min = 0, max = 2)
cnt <- 0
for (i in 1:n) {
if((x1[i]+x2[i]>2) & (x1[i]^2+x2[i]^2<4)) {
cnt <- cnt + 1
}
}
area_hat <- cnt / n
area_hat
area_hat * 4
?plot
sapply(c(1, 2), mean)
sapply(c(1, 2), mean(x))
sapply(c(1, 2), function(x) return mean(x))
sapply(c(1, 2), function(x) mean(x))
mean(1:2)
apply(c(1, 2), mean)
apply(c(1, 2), 1, mean)
apply(c(c(2, 3), c(2, 4)), 1, mean)
sapply(c(c(2, 3), c(2, 4)), 1, mean)
sapply(c(c(2, 3), c(2, 4)), mean)
c(c(2, 3), c(2, 4))
library(plyr)
array(c(1:16), dim=c(2, 2, 2, 2))
array(c(1:16), dim=c(1))
array(c(1:16), dim=c(2, 2))
array(c(1:16), dim=c(2, 3))
array(c(1:16), dim=c(16))
?I
setwd("~/Desktop/semester_1/4.StatisticalComputing/hw/4")
knitr::opts_chunk$set(echo = TRUE)
debt <- read.csv("debt.csv", as.is = TRUE)
dim(debt)
head(debt)
c_split <- split(debt, debt$Country)
c_split
names(c_split)
c_split[[1]]
daply(c_split, mean.growth)
library(plyr)
daply(c_split, mean.growth)
mean.growth <- function(df) {
return (mean(df$growth))
}
daply(c_split, mean.growth)
daply(c_split, country, mean.growth)
daply(c_split, Country, mean.growth)
daply(debt, Country, mean.growth)
names(debt)
daply(debt, Country, mean.growth)
daply(debt, 'Country', mean.growth)
avg_g <- daply(debt, 'Country', mean.growth)
avg_g <- signif(avg_g, 3)
avg_g
avg_g1 <- daply(debt, 'Year', mean.growth)
avg_g1 <- signif(avg_g, 3)
avg_g1
avg_g1 <- daply(debt, 'Year', mean.growth)
avg_g1 <- signif(avg_g1, 3)
avg_g1
class(avg_g1)
mode(avg_g1)
typeof(avg_g1)
avg_g1[1]
avg_g1[1, 1]
names(avg_g1)
plot(c(1946, 2009), avg_g1)
length(avg_g1)
length(c(1946, 2009))
plot(c(1946:2009), avg_g1)
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'avg_gdp_growth')
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'avg_gdp_growth')
ncol(avg_g1)
length(avg_g1)
plot(1:length(avg_g1), avg_g1, xaxt = 'n', xlab = 'year', ylab = 'avg_gdp_growth')
plot(1:length(avg_g1), avg_g1, xaxt = 'n', xlab = 'year', ylab = 'avg_gdp_growth')
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'avg_gdp_growth')
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'avg_gdp_growth')
cor(debt$growth, debt$ratio)
c1 <- cor(debt$growth, debt$ratio)
signif(c1, 3)
daply(debt, 'Country', cor_ctry)
cor_ctry <- function(df) {
return (cor(df$growth, df$ratio))
}
daply(debt, 'Country', cor_ctry)
c2 <- daply(debt, 'Country', cor_ctry)
mean(c2)
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
debt <- read.csv("debt.csv", as.is = TRUE)
mean.growth <- function(df) {
return (mean(df$growth))
}
avg_g <- daply(debt, 'Country', mean.growth)
avg_g <- signif(avg_g, 3)
avg_g
avg_g <- daply(debt, .('Country'), mean.growth)
avg_g <- signif(avg_g, 3)
avg_g
avg_g <- daply(debt, 'Country', mean.growth)
avg_g <- signif(avg_g, 3)
avg_g
print(avg_g)
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'gdp_growth')
library(ggplot2)
avg_g1
names(avg_g1)
avg_g1[1]
ggplot(aes(x = c(1946:2009), y = avg_g1)) + geom_point()
dim(avg_g1
)
dim(avg_g1)
avg_g1[1][1]
avg_g1[1][0]
dim(avg_g)
class(avg_g1)
avg_g1["1946"]
ggplot(aes(x = c(1946:2009), y = as.vector(avg_g1))) + geom_point()
as.vector(avg_g1)
c(1946:2009)
plot(c(1946:2009), avg_g1, xlab = 'year', ylab = 'gdp_growth')
cor_fun <- function(df) {
return (cor(df$growth, df$ratio))
}
hist(c2, breaks = 10, main = "cor_hist", xlab = "cor")
c3[c3>4]
c3 <- daply(debt, 'Year', cor_fun)
c3[c3>4]
c3[1]
c3>4
l1 <- lm(growth ~ ratio, debt)
l1$coefficients
signif(l1$coefficients, 3)
plot(debt$ratio, debt$growth, xlab = "ratio", ylab = "growth")
abline(l1, col = "red")
c2[c2 < -0.5]
c3[c3 > 4]
c3[c3 > 1]
c3[c3 > -10]
ctrs <- names(c2[c2 < -0.5])
par(mfrow=c(2,2))
for(i in ctrs) {
plot(debt[debt$Country == i, ]$ratio, debt[debt$Country == i, ]$growth, xlab = "ratio", ylab = "growth", main = i)
}
par(mfrow=c(2,2))
for(i in ctrs) {
plot(debt[debt$Country == i, ]$ratio, debt[debt$Country == i, ]$growth, xlab = "ratio", ylab = "growth", main = i)
}
debt[debt$Country == France, ]
debt[debt$Country == 'France', ]
fra <- debt[debt$Country=="France", ]
?NA
n <- nrow(fra)
ng <- c()
for(i in c(1:n-1)) {
ng[i] <- ifelse(fra$Year[i+1] == fra$Year[i]+1, fra$growth[i+1], NA)
}
ng[n] <- NA
fra$next.growth <- ng
class(fra$Year)
class(debt$Year)
signif(fra[fra$Year==1971, ]$next.growth, 3)
signif(fra[fra$Year==1972, ]$next.growth, 3)
add_ng <- function(df) {
n <- nrow(df)
ng <- c()
for(i in c(1:n-1)) {
ng[i] <- ifelse(df$Year[i+1] == df$Year[i]+1, df$growth[i+1], NA)
}
ng[n] <- NA
df$next.growth <- ng
return(df)
}
debt <- ddply(debt, "Country", add_ng)
debt
ind <- debt$Country=="France" & debt$Year == 2009
signif(debt[ind, ]$next.growth, 3)
l2 <- lm(next.growth~ratio, debt)
plot(debt$ratio, debt$next.growth, xlab = "ratio", ylab = "growth")
abline(l2, col = 'red')
l3 <- lm(next.growth~growth, debt)
plot(debt$next.growth, debt$growth, xlab = "cur_growth", ylab = "next_growth")
abline(l3, col = 'red')
plot(debt$ratio, debt$next.growth, xlab = "ratio", ylab = "growth")
abline(l2, col = 'red')
plot(debt$ratio, debt$growth, xlab = "ratio", ylab = "growth")
abline(l1, col = "red")
for(i in ctrs) {
plot(debt[debt$Country == i, ]$ratio, debt[debt$Country == i, ]$growth,
xlab = "ratio", ylab = "growth", main = i)
}
