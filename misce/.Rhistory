new <- simulate.data()
mean(new$drug) - mean(new$no.drug)
new <- simulate.data()
mean(new$drug) - mean(new$no.drug)
new <- simulate.data()
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(10, 1000)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(10, 1000)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(10, 1000)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(10, 1000)
mean(new$drug) - mean(new$no.drug)
simulate.data <- function(n = 60, mu.drug = 2) {
tmp <- runif(n)
no.drug <- 100 * rexp(n, rate = 1/tmp)
drug <- 100 * rexp(n, 1/mu.drug)
return(list(no.drug = no.drug, drug = drug))
}
simulate.difference <- function(n = 60, mu.drug = 2) {
new <- simulate.data(n, mu.drug)
return(mean(new$drug) - mean(new$no.drug))
}
simulate.difference()
simulate.difference()
simulate.difference(n = 1000, mu.drug = 10)
new <- simulate.data(1000, 2)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 2)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 2)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 10)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 10)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 10)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 10)
mean(new$drug) - mean(new$no.drug)
new <- simulate.data(1000, 10)
mean(new$drug) - mean(new$no.drug)
rep.sim <- function(nreps=200, n=60, mu.drug=2, seed=NULL) {
if(!is.null(seed)) set.seed(seed)
diff <- c()
for(i in 1:nreps) {
diff <- c(diff, simulate.difference(n, mu.drug))
}
return(sum(diff >= 100))
}
rep.sim(mu.drug = 1.5)
suc <- c()
for(i in 5:100) {
suc <- c(suc, rep.sim(n = i))
}
plot(5:100, suc)
which(suc >= 190)
plot(5:100, suc)
?seq
suc1 <- c()
mu <- seq(0, 5, 0.25)
for(i in mu) {
suc1 <- c(suc1, rep.sim(n = 20, mu.drug = i))
}
plot(mu, suc1)
which(suc1 >= 190)
which(mu[suc1 >= 190])
mu[which(suc1 >= 190)]
sample
rowSums()
rowSums
grad
library("numDeriv", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
grad
ab.collect <- function(n, a.mean, a.sd, b.mean, b.sd) {
a.responses <- rnorm(n, a.mean, a.sd)
b.responses <- rnorm(n, b.mean, b.sd)
return(list(a.responses = a.responses, b.responses = b.responses))
}
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$a.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
mean(ab.collect(100, 1, 2, 3, 4)$b.response)
?t-test
?t.test
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))$p-value
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))$p.value
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))$p.value
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))$p.value
t.test(rnorm(10, 0, 2), rnorm(10, 0, 3))$p.value
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.repsponse
b <- tmp$b.repsponse
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) return("Inconclusive")
else {
return(ifelse(mean(a) > mean(b), "A", "B"))
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.repsponse
b <- tmp$b.repsponse
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) return("Inconclusive")
else {
if(mean(a) > mean(b)) return("A")
else return("B")
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.repsponse
b <- tmp$b.repsponse
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) {
return("Inconclusive")
}
else {
if(mean(a) > mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.repsponse
b <- tmp$b.repsponse
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) {
return("Inconclusive")
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.repsponse
b <- tmp$b.repsponse
test <- t.test(a, b, alternative = "t")
test <- t.test(x=a, y=b, alternative = "t")
a
tmp
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.repsponses
b <- tmp$b.repsponses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) {
return("Inconclusive")
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) {
return("Inconclusive")
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p < 0.05) {
return(p)
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p < 0.05) {
return("Inconclusive")
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
head(a)
head(b)
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$a.responses
head(a)
head(b)
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
t.test(a, b)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$b.responses
head(a)
head(b)
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$b.responses
head(a)
head(b)
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
test
tmp <- ab.collect(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
a <- tmp$a.responses
b <- tmp$b.responses
head(a)
head(b)
test <- t.test(a, b, alternative = "t")
p <- test$p.value
p
test
test.at.end <- function(n, a.mean, a.sd, b.mean, b.sd) {
tmp <- ab.collect(n, a.mean, a.sd, b.mean, b.sd)
a <- tmp$a.responses
b <- tmp$b.responses
test <- t.test(a, b, alternative = "t")
p <- test$p.value
if(p >= 0.05) {
return("Inconclusive")
}
else {
if(mean(a) >= mean(b)) {
return("A")
}
else {
return("B")
}
}
}
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
test.at.end(n=2000, a.mean=100, a.sd=20, b.mean=140, b.sd=10)
pros.df =
read.table("http://www.stat.cmu.edu/~ryantibs/statcomp/data/pros.dat")
dim(pros.df)
head(pros.df, 3)
log(0.25)
pros.df.subset <- pros.df[pros.df$lcp > min(pros.df$lcp), ]
dim(pros.df.subset)
par(mfrow = c(3, 3))
apply(pros.df.subset, 2, hist)
par(mfrow = c(3, 3))
apply(pros.df.subset, 2, hist(main = colnames(pros.df)))
cor(pros.df.subset)
image(cor(pros.df.subset))
?image
?clockwise90
clockwise90 = function(a) { t(a[nrow(a):1,]) } # Handy rotate function
image(clockwise90(cor(pros.df.subset)))
pros.lm <- lm(lpsa~lcavol, data = pros.df)
pros.subset.lm <- lm(lpsa~lcavol, data = pros.df.subset)
coef(pros.lm)
coef(pros.subset.lm)
?legend
plot(pros.df$lpsa, pros.df$lcavol)
points(pros.df.subset$lpsa, pros.df.subset$lcavol, pch = 21)
lines(pros.lm, lwd = 1.5)
?lines
plot(pros.df$lpsa, pros.df$lcavol)
points(pros.df.subset$lpsa, pros.df.subset$lcavol, pch = 21)
abline(pros.lm, lwd = 1.5)
plot(pros.df$lpsa, pros.df$lcavol)
points(pros.df.subset$lpsa, pros.df.subset$lcavol, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(c("full", "sub"), col = c("black", "red"))
plot(pros.df$lpsa, pros.df$lcavol)
points(pros.df.subset$lpsa, pros.df.subset$lcavol, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
plot(pros.df$lpsa, pros.df$lcavol)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
?legend
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(legend = c("full", "sub"), col = c("black", "red"))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1, y = 5, legend = c("full", "sub"), col = c("black", "red"))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1, y = 5, legend = c("full", "sub"), col = c("black", "red"), pch = c(1, 1))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1, y = 5, legend = c("full", "sub"), col = c("black", "red"), pch = c(19, 19))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1, y = 5.5, legend = c("full", "sub"), col = c("black", "red"), pch = c(19, 19))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1.5, y = 5.5, legend = c("full", "sub"), col = c("black", "red"), pch = c(19, 19))
plot(pros.df$lcavol, pros.df$lpsa)
points(pros.df.subset$lcavol, pros.df.subset$lpsa, pch = 21)
abline(pros.lm, lwd = 1.5)
abline(pros.subset.lm, col = "red", lwd = 1.5)
legend(x = -1.3, y = 5.5, legend = c("full", "sub"), col = c("black", "red"), pch = c(19, 19))
pros.df$svi
pros.df.subset$svi
pros.svi <- lm(lpsa~lcavol, data = pros.df[pros.df$svi == 1, ])
pros.no.svi <- lm(lpsa~lcavol, data = pros.df[pros.df$svi == 0, ])
plot(pros.df$lcavol, pros.df$lpsa)
abline(pros.svi, lwd = 1.5)
abline(pros.no.svi, col = "red", lwd = 1.5)
pros.svi <- lm(lpsa~lcavol, data = pros.df[pros.df$svi == 1, ])
pros.no.svi <- lm(lpsa~lcavol, data = pros.df[pros.df$svi == 0, ])
plot(pros.df$lcavol, pros.df$lpsa)
abline(pros.svi, lwd = 1.5)
abline(pros.no.svi, col = "red", lwd = 1.5)
legend(x = -1.3, y = 5.5, legend = c("svi", "no svi"), col = c("black", "red"), pch = c(19, 19))
