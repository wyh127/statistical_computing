vote <- regmatches(lines, regexpr(pat5, lines))
substring(vote, 1, nchar(vote)-1)
substring(vote, 6, nchar(vote)-5)
substring(vote, 7, nchar(vote)-6)
substring(vote, 7, nchar(vote)-7)
vote <- substring(vote, 7, nchar(vote)-7)
vote <- factor(vote)
levels(vote)
numeric.vote <- ifelse(vote == 'Aye', 0, 1)
italy.strikes
n <- nrow(italy.strikes)
B <- 100
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n, n, replace = TRUE)
}
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
colnames(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_ests[b, ] <- coef(lm(strike.volum ~ left.parliament, italy.strikes[resampled_values[b, ], ]))
}
for (b in 1:B) {
resampled_ests[b, ] <- coef(lm(strike.volume ~ left.parliament, italy.strikes[resampled_values[b, ], ]))
}
head(resampled_ests)
var(resampled_ests[, "Slope_Est"])
?var
Cl_1 <- quantile(resampled_ests[, "Slope_Est"], 0.025)
Cu_1 <- quantile(resampled_ests[, "Slope_Est"], 0.975)
int_1 <- c(Cl_1, Cu_1)
int_1
lapply(apps, summary)
inst_split <- split(apps, apps$Installs)
box_plt <- function(df) {
boxplot(df$Rating)
}
sapply(inst_split, box_plt)
sapply(inst_split, box_plt)
cat_split <- split(apps, apps$Category)
rat_plot <- function(df) {
plot(df$Price, df$Rating)
}
par(mfrow = c(3, 11))
sapply(cat_split, rat_plot)
cat_split <- split(apps, apps$Category)
rat_plot <- function(df) {
plot(df$Price, df$Rating)
}
par(mfrow = c(3, 11))
sapply(cat_split, rat_plot)
library(plyr)
l_lyr(cat_split, rat_plot)
d_lyr(cat_split, rat_plot)
d_ply(cat_split, rat_plot)
?d_ply
d_ply(cat_split, .(Price, Rating), plot)
d_ply(cat_split, .(Price, Rating), plot)
library(plyr)
d_ply(cat_split, .(Price, Rating), plot)
cat_split
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(3, 11))
library(plyr)
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(3, 11))
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(3, 11))
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(3, 11), mar = c(4, 4, 1, 1))
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(3, 11))
d_ply(apps, .(Category), rat_plot)
pat1 <- "name-id=\"[A-Z][0-9]{6}\""
id <- regmatches(lines, regexpr(pat1, lines))
id <- substring(id, 10, nchar(id)-1)
id
pat2 <- "unaccented-name=\".+\" party"
names <- regmatches(lines, regexpr(pat2, lines))
names <- substring(names, 18, nchar(names)-7)
pat3 <- "party=\"[A-Z]\""
party <- regmatches(lines, regexpr(pat3, lines))
party <- substring(party, 8, nchar(party)-1)
pat4 <- "state=\"[A-Z]+\""
state <- regmatches(lines, regexpr(pat4, lines))
state <- substring(state, 8, nchar(state)-1)
pat5 <- "<vote>[A-z]+</vote>"
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
vote <- factor(vote)
levels(vote)
numeric.vote <- ifelse(vote == 'Aye', 0, 1)
pat2 <- "unaccented-name=\".+\" party"
name <- regmatches(lines, regexpr(pat2, lines))
name <- substring(name, 18, nchar(name)-7)
rollCall274 <- data.frame(name, state, party, vote, numeric.vote)
length(numeric.vote)
numme
length(numeric.vote)
length(vote)
pat5 <- "<vote>[A-z]+</vote>"
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
length(vote)
regexpr(pat5, lines)
lines[26]
pat5 <- "<vote>[A-z]+|Not Voting</vote>"
regexpr(pat5, lines)
pat5 <- "<vote>([A-z]+)|(Not Voting)</vote>"
regexpr(pat5, lines)
vote <- substring(vote, 7, nchar(vote)-7)
vote
pat5 <- "<vote>[A-z]+|([A-z]+ [A-z]+)</vote>"
regexpr(pat5, lines)
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
vote
pat5 <- "<vote>([A-z]+)|([A-z]+ [A-z]+)</vote>"
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
vote
vote <- regmatches(lines, regexpr(pat5, lines))
vote
pat5 <- "<vote>([A-z]+)</vote>"
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
vote
rollCall274<-readLines("Roll_Call_274.xml")
getwd()
pat <- '^<recorded-vote>'
length(grep(pat, rollCall274))
grep(pat, rollCall274)
lines <- rollCall274[grep(pat, rollCall274)]
pat1 <- "name-id=\"[A-Z][0-9]{6}\""
id <- regmatches(lines, regexpr(pat1, lines))
id <- substring(id, 10, nchar(id)-1)
pat2 <- "unaccented-name=\".+\""
name <- regmatches(lines, regexpr(pat2, lines))
name
pat2 <- "unaccented-name=\".+\" party"
names <- regmatches(lines, regexpr(pat2, lines))
names <- substring(names.POSIXlt(), 18, nchar(names)-7)
names <- substring(names, 18, nchar(names)-7)
names
pat3 <- "party=\"[A-Z]\""
party <- regmatches(lines, regexpr(pat3, lines))
party <- substring(party, 8, nchar(party)-1)
pat4 <- "state=\"[A-Z]+\""
state <- regmatches(lines, regexpr(pat4, lines))
state <- substring(state, 8, nchar(state)-1)
pat5 <- "<vote>.+</vote>"
vote <- regmatches(lines, regexpr(pat5, lines))
vote <- substring(vote, 7, nchar(vote)-7)
vote
vote <- factor(vote)
levels(vote)
numeric.vote <- ifelse(vote == 'Aye', 0, 1, -1)
numeric.vote <- ifelse(vote == 'Aye', 0, ifelse(vote == 'No', 1, -1))
numeric.vote
pat2 <- "unaccented-name=\".+\" party"
name <- regmatches(lines, regexpr(pat2, lines))
name <- substring(name, 18, nchar(name)-7)
rollCall274 <- data.frame(name, state, party, vote, numeric.vote)
row.names(rollCall274) <- id
head(rollCall274)
apps<-read.csv("apps.csv", header = T)
apps$Reviews<-as.numeric(apps$Reviews)
apps$Installs<-factor(apps$Installs, level= c("1+", "5+", "10+", "50+", "100+", "500+", "1,000+", "5,000+", "10,000+", "50,000+", "100,000+", "500,000+", "1,000,000+","5,000,000+","10,000,000+","50,000,000+", "100,000,000+", "500,000,000+", "1,000,000,000+"))
apply(apps, 2, summary)
summary(apps$App)
inst_split <- split(apps, apps$Installs)
box_plt <- function(df) {
boxplot(df$Rating)
}
sapply(inst_split, box_plt)
library(plyr)
rat_plot <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_plot)
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(11, 3))
par(mfrow = c(11, 3))
d_ply(apps, .(Category), rat_plot)
par(mfrow = c(11, 3), mar=c(1,1,1,1))
d_ply(apps, .(Category), rat_plot)
apps<-read.csv("apps.csv", header = T)
apps$Reviews<-as.numeric(apps$Reviews)
apps$Installs<-factor(apps$Installs, level= c("1+", "5+", "10+", "50+", "100+", "500+", "1,000+", "5,000+", "10,000+", "50,000+", "100,000+", "500,000+", "1,000,000+","5,000,000+","10,000,000+","50,000,000+", "100,000,000+", "500,000,000+", "1,000,000,000+"))
dlply(apps, summary)
library(plyr)
dlply(apps, summary)
alply(apps, 2, summary)
lapply(apps, summary)
boxplot(apps$Rating ~ apps$Installs)
inst_split <- split(apps, apps$Installs)
box_plt <- function(df) {
boxplot(df$Rating)
}
sapply(inst_split, box_plt)
boxplot(apps$Rating ~ apps$Installs)
levels(apps$Installs)
apps$Installs
boxplot(apps$Rating ~ apps$Installs, las = 3)
boxplot(apps$Rating ~ apps$Installs, las = 3)
boxplot(apps$Rating ~ apps$Installs, las = 3)
axis(1,cex.axis=2)
boxplot(apps$Rating ~ apps$Installs, las = 3)
axis(1,cex.axis=2)
axis(1,cex.axis=0.5)
boxplot(apps$Rating ~ apps$Installs, las = 3, cex.axis = 0.5)
boxplot(apps$Rating ~ apps$Installs, las = 3, cex.axis = 0.6)
boxplot(apps$Rating ~ apps$Installs, las = 3, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 0, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 1, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 1, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.7)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.8)
boxplot(apps$Rating ~ apps$Installs, las = 2, cex.axis = 0.7)
rat_plot <- function(df) {
plot(df$Price, df$Rating)
}
par(mfrow = c(11, 3), mar=c(1,1,1,1))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(2, 2, 2, 2))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(.2, .2, .2, .2))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(.1, .1, .1, .1))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(.01, .01, .01, .01))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(.1, .1, .1, .1))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(11, 3), mar=c(.1, .1, .1, .1))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(7, 5), mar=c(.5, .5, .5, .5))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(7, 5), mar=c(.5, .5, .5, .5))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(6, 6), mar=c(.5, .5, .5, .5))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(5, 7), mar=c(.5, .5, .5, .5))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(5, 7), mar=c(.1, .5, .5, .5))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(5, 7), mar=c(1, 1, 1, 1))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(5, 7), mar=c(2, 2, 2, 2))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(4, 9), mar=c(2, 2, 2, 2))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(6, 6), mar=c(2, 2, 2, 2))
d_ply(apps, "Category", rat_plot)
par(mfrow = c(6, 6), mar=c(1.5, 1.5, 1.5, 1.5))
d_ply(apps, "Category", rat_plot)
apps<-read.csv("apps.csv", header = T)
apps$Reviews<-as.numeric(apps$Reviews)
apps$Installs<-factor(apps$Installs, level= c("1+", "5+", "10+", "50+", "100+", "500+", "1,000+", "5,000+", "10,000+", "50,000+", "100,000+", "500,000+", "1,000,000+","5,000,000+","10,000,000+","50,000,000+", "100,000,000+", "500,000,000+", "1,000,000,000+"))
head(apps)
dim(apps)
lapply(apps, summary)
library("dplyr")
?llaply
?llply
?laply
?alply
?aaply
??aaply
?dplyr
llply(apps, summary)
library("plyr")
llply(apps, summary)
alply(apps, 2, summary)
names(apps)
?boxplot
boxplot(Ratings~Installs, data = apps)
boxplot(Rating~Installs, data = apps)
plot(apps$Installs, apps$Rating)
plot(apps$Installs, apps$Rating)
plot(apps$Installs, apps$Rating, las = 2)
plot(apps$Installs, apps$Rating, las = 1.6)
plot(apps$Installs, apps$Rating, las = 1.5)
plot(apps$Installs, apps$Rating, las = 1)
plot(apps$Installs, apps$Rating, las = 0)
plot(apps$Installs, apps$Rating, las = 3)
plot(apps$Installs, apps$Rating, las = 6)
plot(apps$Installs, apps$Rating, las = 4)
plot(apps$Installs, apps$Rating, las = 3)
plot(apps$Installs, apps$Rating, las = 3.4)
plot(apps$Installs, apps$Rating, las = 3.9)
plot(apps$Installs, apps$Rating, las = 0.4)
plot(apps$Installs, apps$Rating, las = 2)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.3)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 1)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.8)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.7)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, xaxt = "n")
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, axes = F)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, yaxt = F)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, yaxt = "n")
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.xaxis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.lab = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.lab = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 1, cex.lab = 0.6)
plot(apps$Installs, apps$Rating, cex.lab = 0.6)
par(las = 2)
plot(apps$Installs, apps$Rating, cex.lab = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, cex = 0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, cex = 0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, cex = 0.5)
names(apps)
par(mfrow = c(5, 7))
rat_pri <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_pri)
par(mfrow = c(5, 7), mar=c(1,1,1,1))
rat_pri <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_pri)
par(mfrow = c(5, 7), mar=c(0.8, 0.8, 0.8, 0.8))
rat_pri <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_pri)
par(mfrow = c(5, 7), mai=c(0.2, 0.15, 0.15, 0.15))
rat_pri <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_pri)
myplot<-function(apps.subset) {
plot(apps.subset$Price, apps.subset$Rating, xlab="Price", ylab="Rating", pch=16,lwd=0.8,
main=unique(apps.subset$Category), cex=0.8, cex.axis=0.5, cex.main=0.6, cex.lab=0.5,
tcl=-0.2, mgp = c(0.6, 0.05, 0.0))
}
par(mfrow=c(6,6), mai=c(0.2, 0.15, 0.15, 0.15))
d_ply(apps, .(Category), myplot)
par(mfrow = c(5, 7), mai=c(0.2, 0.15, 0.15, 0.15))
myplot<-function(apps.subset) {
plot(apps.subset$Price, apps.subset$Rating, xlab="Price", ylab="Rating", pch=16,lwd=0.8,
main=unique(apps.subset$Category), cex=0.8, cex.axis=0.5, cex.main=0.6, cex.lab=0.5,
tcl=-0.2, mgp = c(0.6, 0.05, 0.0))
}
d_ply(apps, .(Category), rat_pri)
par(mfrow = c(5, 7), mai=c(0.2, 0.15, 0.15, 0.15))
myplot<-function(apps.subset) {
plot(apps.subset$Price, apps.subset$Rating, xlab="Price", ylab="Rating", pch=16,lwd=0.8,
main=unique(apps.subset$Category), cex=0.8, cex.axis=0.5, cex.main=0.6, cex.lab=0.5,
tcl=-0.2, mgp = c(0.6, 0.05, 0.0))
}
d_ply(apps, .(Category), rat_pri)
d_ply(apps, .(Category), myplot)
par(mfrow = c(5, 7), mai=c(0.2, 0.15, 0.15, 0.15))
d_ply(apps, .(Category), myplot)
par(mfrow = c(5, 7), mar=c(0.8, 0.8, 0.8, 0.8))
rat_pri <- function(df) {
plot(df$Price, df$Rating)
}
d_ply(apps, .(Category), rat_pri)
unique(apps.subset$Category)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, cex = 0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, tcl = -0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, tcl = -0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, cex = 0.5)
plot(apps$Installs, apps$Rating, las = 2, cex.axis = 0.6, tcl = -0.5)
rollCall274<-readLines("Roll_Call_274.xml")
head(rollCall274)
dim(rollCall274)
length(rollCall274)
?grep
rollCall274[34]
rollCall274[35]
rollCall274[36]
rollCall274[290]
pat <- "<recorded-vote>"
length(grep(pat, rollCall274))
vote <- grep(pat, rollCall274)
length(vote)
head(vote)
vote <- rollCall274[vote]
length(vote)
head(vote)
pat <- "<recorded-vote>"
vote_ind <- grep(pat, rollCall274)
vote <- rollCall274[vote_ind]
length(vote)
vote <- rollCall274[vote_ind]
length(vote)
head(vote)
pat1 <- "[A-Z][0-9]{6}"
strsplit(vote, pat1)
?regmatches
pat1 <- "[A-Z][0-9]{6}"
regmatches(pat1, vote)
head(vote)
regexpr(pat1, vote)
substr(vote, regexpr(pat1, vote) + 6)
substr(vote, regexpr(pat1, vote), regexpr(pat1, vote) + 6)
pat1 <- "[A-Z][0-9]{6}"
loc1 <- regexpr(pat1, vote)
ID <- substr(vote, regexpr(pat1, vote), regexpr(pat1, vote)+6)
length(ID)
head(vote)
pat2 <- "sort-field=\"[A-Za-z\\s]+\""
loc2 <- regexpr(pat2, vote)
loc2
vote[25]
pat2 <- "sort-field=\"[.]+\" unaccented"
loc2 <- regexpr(pat2, vote)
loc2
pat2 <- "sort-field=\"[.]+\"\\sunaccented"
loc2 <- regexpr(pat2, vote)
loc2
pat2 <- "sort-field=\"[.]+\""
loc2 <- regexpr(pat2, vote)
loc2
pat2 <- "sort-field="
loc2 <- regexpr(pat2, vote)
loc2
pat2 <- "sort-field"
loc2 <- regexpr(pat2, vote)
pat21 <- "unaccented-name"
loc21 <- regexpr(pat21, vote)
loc2
loc21
substr(vote, loc2, loc21)
substr(vote, loc2+11, loc21-3)
substr(vote, loc2+12, loc21-3)
head(vote)
pat3 <- "party"
loc3 <- regexpr(pat3, vote)
pat31 <- "state"
loc31 <- regexpr(pat31, vote)
substr(vote, loc3+1, loc31-3)
pat3 <- "party"
loc3 <- regexpr(pat3, vote)
pat31 <- "state"
loc31 <- regexpr(pat31, vote)
substr(vote, loc3+6, loc31-3)
pat3 <- "party"
loc3 <- regexpr(pat3, vote)
pat31 <- "state"
loc31 <- regexpr(pat31, vote)
substr(vote, loc3+7, loc31-3)
party <- substr(vote, loc3+7, loc31-3)
length(party)
head(vote)
pat4 <- "state"
loc4 <- regexpr(pat4, vote)
pat41 <- "role"
loc41 <- regexpr(pat41, vote)
substr(vote, loc3+6, loc31-3)
pat4 <- "state"
loc4 <- regexpr(pat4, vote)
pat41 <- "role"
loc41 <- regexpr(pat41, vote)
substr(vote, loc4+6, loc41-3)
pat4 <- "state"
loc4 <- regexpr(pat4, vote)
pat41 <- "role"
loc41 <- regexpr(pat41, vote)
substr(vote, loc4+7, loc41-3)
state <- substr(vote, loc4+7, loc41-3)
length(state)
head(vote)
pat5 <- "<vote>"
loc5 <- regexpr(pat5, vote)
pat51 <- "<\vote>"
loc51 <- regexpr(pat51, vote)
substr(vote, loc5+7, loc51-3)
pat5 <- "<vote>"
loc5 <- regexpr(pat5, vote)
pat51 <- "<\vote>"
loc51 <- regexpr(pat51, vote)
substr(vote, loc5+4, loc51-3)
loc5
substr(vote, loc5+4, loc51)
loc51
pat5 <- "<vote>"
loc5 <- regexpr(pat5, vote)
pat51 <- "</vote>"
loc51 <- regexpr(pat51, vote)
substr(vote, loc5+4, loc51)
substr(vote, loc5+6, loc51-1)
vote1 <- substr(vote, loc5+6, loc51-1)
vote1 <- factor(vote1)
vote1
table(vote1)
levels(vote1)
numeric.vote <- ifelse(vote1 == "Aye", 0, ifelse(vote1 == "No", 0, -1))
numeric.vote
numeric.vote <- ifelse(vote1 == "Aye", 1, ifelse(vote1 == "No", 0, -1))
numeric.vote
sum(numeric.vote == 1)
rollCall274 <- data.frame(name = names, state = state, party = party, vote = vote1, numeric.vote = numeric.vote)
head(rollCall274)
rollCall274
ID
row.names(rollCall274) <- ID
rollCall274
