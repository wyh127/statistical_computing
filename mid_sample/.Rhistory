knitr::opts_chunk$set(echo = TRUE)
gpa <- read.table("CH01PR19.txt", header = FALSE)
names(gpa) <- c("Y", "X")
reg <- lm(Y~X, data = gpa)
coe <- summary(reg)$coefficients
anova(reg)
| |Sum of Squares|df|MSS|F-Stat|P-value|
| ------------- |:-------------:| -----:| -----:| -----:| -----:|
|$SS_{Regression}$|3.588|1|3.5878|9.2402|0.002917|
|$SS_{Resigual}$|45.818|118|0.3883|||
|$SS_T$|49.406|119|0.4151|||
F_stat <- (coe[2, 1]/(coe[2, 2])) ^ 2
F_ref <- qf(0.99, 1, 118)
F_stat > F_ref
F-stat
F_stat
anova(reg)
R2 <- anova(reg)[1, 2] / (anova(reg)[1, 2] + anova(reg)[2, 2])
r <- sqrt(R2)
r
reg
3.588/49.406
sqrt(0.07262276)
plastic <- read.table("CH01PR22.txt")
names(plastic) <- c("Y", "X")
reg_1 <- lm(Y~X, data = plastic)
anova(reg_1)
coe_1 <- summary(reg_1)$coefficients
F_1 <- (coe_1[2, 1]/coe_1[2, 2])^2
P_1 <- 1-pf(F_1, 1, 14)
P_1 < 0.01
R2_1 <- anova(reg_1)[1, 2] / (anova(reg_1)[1, 2] + anova(reg_1)[2, 2])
r_1 <- sqrt(R2_1)
?rnorm
set.seed(1)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg_2 <- lm(Y~X)
reg_2
X_h <- data.frame(X = 10)
predict(reg_2, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)
sqrt(0.125)
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, x_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
b1 <- c()
CIs <- list()
for (i in 1:200) {
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
X
var(X)
sd(X)
X
for (i in 1:2000) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
sd(b1)
summary(reg_2)
b1
mean(b1)
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg_1, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
CIs
b1 <- c()
CIs <- list()
for (i in 1:200) {
set.seed(i)
err <- rnorm(5, 0, 5)
X <- seq(4, 20, 4)
Y <- 4*X + 20 + err
reg <- lm(Y~X)
ce <- summary(reg)$coefficients
b1[i] <- ce[2, 1]
pre <- predict(reg, X_h, se.fit = TRUE, interval = "confidence", level = 0.95)$fit
CIs[[i]] <- c(pre[2], pre[3])
}
p = 0
for(i in 1:200) {
if(60 >= CIs[[i]][1] && 60 <= CIs[[i]][2]) {
p = p + 1;
}
}
p / 200
ggplot(plastic, aes(y = Y - predict(reg_1), x = X)) + geom_point() + ylim(c(-25, 25))
library(ggplot2)
ggplot(plastic, aes(y = Y - predict(reg_1), x = X)) + geom_point() + ylim(c(-25, 25))
head(iris)
Versicolor <- ifelse(iris$Species == 'versicolor', 1, 0)
Versicolor
table
table(Versicolor)
3^3
knitr::opts_chunk$set(echo = TRUE)
n <- 100
x1 <- runif(n, min = 0, max = 2)
x2 <- runif(n, min = 0, max = 2)
cnt <- 0
for (i in 1:n) {
if((x1+x2>2) && (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
area_hat <- cnt / n
area_hat
x1
for (i in 1:n) {
if((x1+x2>2) && (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
cnt
x2
x1+x2>2
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt += 1
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt = cnt + 1
}
}
for (i in 1:n) {
if((x1+x2>2) & (x1^2+x2^2<4)) {
cnt <- cnt + 1
}
}
for (i in 1:n) {
if((x1[i]+x2[i]>2) & (x1[i]^2+x2[i]^2<4)) {
cnt <- cnt + 1
}
}
area_hat <- cnt / n
area_hat
pi
pi-2
n <- 100000
x1 <- runif(n, min = 0, max = 2)
x2 <- runif(n, min = 0, max = 2)
cnt <- 0
for (i in 1:n) {
if((x1[i]+x2[i]>2) & (x1[i]^2+x2[i]^2<4)) {
cnt <- cnt + 1
}
}
area_hat <- cnt / n
area_hat
area_hat * 4
?plot
sapply(c(1, 2), mean)
sapply(c(1, 2), mean(x))
sapply(c(1, 2), function(x) return mean(x))
sapply(c(1, 2), function(x) mean(x))
mean(1:2)
apply(c(1, 2), mean)
apply(c(1, 2), 1, mean)
apply(c(c(2, 3), c(2, 4)), 1, mean)
sapply(c(c(2, 3), c(2, 4)), 1, mean)
sapply(c(c(2, 3), c(2, 4)), mean)
c(c(2, 3), c(2, 4))
library(plyr)
array(c(1:16), dim=c(2, 2, 2, 2))
array(c(1:16), dim=c(1))
array(c(1:16), dim=c(2, 2))
array(c(1:16), dim=c(2, 3))
array(c(1:16), dim=c(16))
?I
setwd("~/Desktop/semester_1/4.StatisticalComputing/mid_sample")
SP500 <- readLines("SP500.html")
t_pat <- '<td class=\"left\">[A-z]+\ [0-9]+,\ [0-9]{4}</td>'
time <- SP500[grep(t_pat, SP500)]
time
substr(time, nchar(time)-8, nchar(time)-5)
Time <- as.numeric(substr(time, nchar(time)-8, nchar(time)-5))
time
Time
p_pat <- '<td class="right">[0-9]+.[0-9]{2}'
price <- SP500[grep(p_pat, SP500)]
substr(price, 27, nchar(price))
Price <- as.numeric(substr(price, 27, nchar(price)))
SP500.df <- data.frame(Time, Price)
Price
Price <- as.numeric(substr(price, 27, nchar(price)))
p_pat <- '<td class="right">[0-9]+.[0-9]{2}'
price <- SP500[grep(p_pat, SP500)]
Price <- as.numeric(substr(price, 27, nchar(price)))
price
substr(price, 27, nchar(price))
as.numeric(substr(price, 27, nchar(price)))
typeof(substr(price, 27, nchar(price)))
class(substr(price, 27, nchar(price)))
mode(substr(price, 27, nchar(price)))
substr(price, 27, nchar(price))[1]
as.numeric(substr(price, 27, nchar(price))[1])
as.numeric(sub(",", ".", price, fixed = TRUE))
SP500 <- readLines("SP500.html")
date_exp <- "<td class=\"left\">[A-Z][a-z]+ [0-9]{1,2}, [0-9]{4}</td>"
dates.rows <- grep(date_exp ,SP500)
refined_date_exp <- "[0-9]{4}"
date_matches <- gregexpr(refined_date_exp,SP500[dates.rows])
time <- as.numeric(unlist(regmatches(SP500[dates.rows],date_matches)))
SP500 <- readLines("SP500.html")
t_pat <- '<td class=\"left\">[A-z]+\ [0-9]+,\ [0-9]{4}</td>'
time <- SP500[grep(t_pat, SP500)]
Time <- as.numeric(substr(time, nchar(time)-8, nchar(time)-5))
p_pat <- '<td class="right">[0-9]+.[0-9]{2}'
price <- SP500[grep(p_pat, SP500)]
price <- substr(price, 27, nchar(price))
price <- gsub(',', '', price)
price
Price <- as.numeric(price)
SP500.df <- data.frame(Time, Price)
head(SP500.df)
tail(SP500.df)
t40 <- head(SP500.df, 40)
plot(t40$Time, t40$Price, type = 'l')
